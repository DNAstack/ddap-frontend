<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dnastack</groupId>
	<artifactId>ddap-frontend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ddap-frontend</name>
	<description>Data Discovery and Access Platform - Frontend Service</description>

	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>Greenwich.RC1</spring-cloud.version>
		<angular.project.location>angular</angular.project.location>
		<angular.project.nodeinstallation>node_installation</angular.project.nodeinstallation>
		<node.version>v11.13.0</node.version>
		<npm.version>6.7.0</npm.version>
		<protoc.version>3.7.0.2</protoc.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.10.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.10.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.10.5</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.10.5</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<!-- Feign HTTP Client -->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-core</artifactId>
            <version>10.2.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
            <version>10.2.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-jackson</artifactId>
            <version>10.2.0</version>
        </dependency>

		<!-- resilience4j for retrying -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-retry</artifactId>
			<version>0.13.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.7.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java-util</artifactId>
			<version>3.7.1</version>
		</dependency>

		<!-- Automatically excluded from repackaged archive ("fat jar") by spring-boot-maven-plugin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
    </dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>27.1-jre</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>de.qaware.maven</groupId>
						<artifactId>go-offline-maven-plugin</artifactId>
						<version>1.1.0</version>
						<configuration>
							<downloadSources>false</downloadSources>
							<downloadJavadoc>false</downloadJavadoc>
							<dynamicDependencies>
								<DynamicDependency>
									<groupId>org.apache.maven.surefire</groupId>
									<artifactId>surefire-junit4</artifactId>
									<version>2.22.1</version>
									<repositoryType>PLUGIN</repositoryType>
								</DynamicDependency>
							</dynamicDependencies>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.0</version>
						<configuration>
							<workingDirectory>${angular.project.location}</workingDirectory>
							<installDirectory>${angular.project.nodeinstallation}</installDirectory>
						</configuration>
						<executions>
							<!-- It will install nodejs and npm -->
							<execution>
								<id>install node and npm</id>
								<phase>initialize</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>${node.version}</nodeVersion>
									<npmVersion>${npm.version}</npmVersion>
								</configuration>
							</execution>

							<!-- It will execute command "npm install" inside "/angular" directory -->
							<execution>
								<id>npm install</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install --unsafe-perm</arguments>
								</configuration>
							</execution>
							<!-- It will execute command "npm run build:prod" inside "/angular" directory
                                to clean and create "/dist" directory -->
							<execution>
								<id>npm build</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build:prod</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.os72</groupId>
						<artifactId>protoc-jar-maven-plugin</artifactId>
						<version>${protoc.version}</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<addProtoSources>all</addProtoSources>
									<includeMavenTypes>direct</includeMavenTypes>
									<inputDirectories>
										<include>${basedir}/src/main/resources/protos</include>
									</inputDirectories>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>test</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${basedir}/target/generated-sources</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Plugin to copy the content of /angular/dist/ directory to output
                        directory -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.4.2</version>
						<executions>
							<execution>
								<id>default-copy-resources</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<!-- This folder is the folder where your angular files
                                    will be copied to so that they end up in the fat jar. -->
									<outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/${angular.project.location}/dist/ddapfrontend/</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-spring-boot-only</id>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<!-- This folder is the folder where your angular files
                                    will be copied to so that they end up in the fat jar. -->
									<outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/main/resources/static</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>

</project>
